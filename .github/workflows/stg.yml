# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test-first"
  test-first:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # すべての履歴を取得

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  send_slack_notification:
    runs-on: ubuntu-latest
    environment: stg
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # すべての履歴を取得

      - name: Get commit hashes
        id: get_hashes
        run: |
          echo "SCHEMA_HASH=$(git rev-parse HEAD:schema)" >> $GITHUB_OUTPUT
          echo "API_HASH=$(git rev-parse HEAD:api)" >> $GITHUB_OUTPUT
          echo "FRONTEND_HASH=$(git rev-parse HEAD:frontend)" >> $GITHUB_OUTPUT

      - name: Send API Request
        run: |
          curl -X POST "${{ secrets.SLACK_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.SLACK_WEBHOOK_TOKEN }}" \
            -d '{
              "schemaCommitHash": "${{ steps.get_hashes.outputs.SCHEMA_HASH }}",
              "apiCommitHash": "${{ steps.get_hashes.outputs.API_HASH }}",
              "frontendCommitHash": "${{ steps.get_hashes.outputs.FRONTEND_HASH }}"
            }'

  # This workflow contains a single job called "test-second"
  test-second:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: test-first

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world again!

